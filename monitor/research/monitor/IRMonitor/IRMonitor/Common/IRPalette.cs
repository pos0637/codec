using System;

namespace IRMonitor.Common
{
    /// <summary>
    /// 红外调色板
    /// </summary>
    public static class IRPalette
    {
        /// <summary>
        /// 类型枚举
        /// </summary>
        public enum PaletteType
        {
            /// <summary>
            /// 红色
            /// </summary>
            Red,
            /// <summary>
            /// 蓝色
            /// </summary>
            Blue,
            /// <summary>
            /// 灰度
            /// </summary>
            Gray,
            /// <summary>
            /// 彩虹色
            /// </summary>
            Rainbow,
            /// <summary>
            /// 北极蓝
            /// </summary>
            Arctic,
            /// <summary>
            /// 火山红
            /// </summary>
            Lava,
        }

        /// <summary>
        /// 灰度
        /// </summary>
        public static Int32[] sGrayPalette = {
            0x00000000, 0x00010101, 0x00020202, 0x00030303, 0x00040404, 0x00050505, 0x00060606, 0x00070707,
            0x00080808, 0x00090909, 0x000A0A0A, 0x000B0B0B, 0x000C0C0C, 0x000D0D0D, 0x000E0E0E, 0x000F0F0F,
            0x00101010, 0x00111111, 0x00121212, 0x00131313, 0x00141414, 0x00151515, 0x00161616, 0x00171717,
            0x00181818, 0x00191919, 0x001A1A1A, 0x001B1B1B, 0x001C1C1C, 0x001D1D1D, 0x001E1E1E, 0x001F1F1F,
            0x00202020, 0x00212121, 0x00222222, 0x00232323, 0x00242424, 0x00252525, 0x00262626, 0x00272727,
            0x00282828, 0x00292929, 0x002A2A2A, 0x002B2B2B, 0x002C2C2C, 0x002D2D2D, 0x002E2E2E, 0x002F2F2F,
            0x00303030, 0x00313131, 0x00323232, 0x00333333, 0x00343434, 0x00353535, 0x00363636, 0x00373737,
            0x00383838, 0x00393939, 0x003A3A3A, 0x003B3B3B, 0x003C3C3C, 0x003D3D3D, 0x003E3E3E, 0x003F3F3F,
            0x00404040, 0x00414141, 0x00424242, 0x00434343, 0x00444444, 0x00454545, 0x00464646, 0x00474747,
            0x00484848, 0x00494949, 0x004A4A4A, 0x004B4B4B, 0x004C4C4C, 0x004D4D4D, 0x004E4E4E, 0x004F4F4F,
            0x00505050, 0x00515151, 0x00525252, 0x00535353, 0x00545454, 0x00555555, 0x00565656, 0x00575757,
            0x00585858, 0x00595959, 0x005A5A5A, 0x005B5B5B, 0x005C5C5C, 0x005D5D5D, 0x005E5E5E, 0x005F5F5F,
            0x00606060, 0x00616161, 0x00626262, 0x00636363, 0x00646464, 0x00656565, 0x00666666, 0x00676767,
            0x00686868, 0x00696969, 0x006A6A6A, 0x006B6B6B, 0x006C6C6C, 0x006D6D6D, 0x006E6E6E, 0x006F6F6F,
            0x00707070, 0x00717171, 0x00727272, 0x00737373, 0x00747474, 0x00757575, 0x00767676, 0x00777777,
            0x00787878, 0x00797979, 0x007A7A7A, 0x007B7B7B, 0x007C7C7C, 0x007D7D7D, 0x007E7E7E, 0x007F7F7F,
            0x00808080, 0x00818181, 0x00828282, 0x00838383, 0x00848484, 0x00858585, 0x00868686, 0x00878787,
            0x00888888, 0x00898989, 0x008A8A8A, 0x008B8B8B, 0x008C8C8C, 0x008D8D8D, 0x008E8E8E, 0x008F8F8F,
            0x00909090, 0x00919191, 0x00929292, 0x00939393, 0x00949494, 0x00959595, 0x00969696, 0x00979797,
            0x00989898, 0x00999999, 0x009A9A9A, 0x009B9B9B, 0x009C9C9C, 0x009D9D9D, 0x009E9E9E, 0x009F9F9F,
            0x00A0A0A0, 0x00A1A1A1, 0x00A2A2A2, 0x00A3A3A3, 0x00A4A4A4, 0x00A5A5A5, 0x00A6A6A6, 0x00A7A7A7,
            0x00A8A8A8, 0x00A9A9A9, 0x00AAAAAA, 0x00ABABAB, 0x00ACACAC, 0x00ADADAD, 0x00AEAEAE, 0x00AFAFAF,
            0x00B0B0B0, 0x00B1B1B1, 0x00B2B2B2, 0x00B3B3B3, 0x00B4B4B4, 0x00B5B5B5, 0x00B6B6B6, 0x00B7B7B7,
            0x00B8B8B8, 0x00B9B9B9, 0x00BABABA, 0x00BBBBBB, 0x00BCBCBC, 0x00BDBDBD, 0x00BEBEBE, 0x00BFBFBF,
            0x00C0C0C0, 0x00C1C1C1, 0x00C2C2C2, 0x00C3C3C3, 0x00C4C4C4, 0x00C5C5C5, 0x00C6C6C6, 0x00C7C7C7,
            0x00C8C8C8, 0x00C9C9C9, 0x00CACACA, 0x00CBCBCB, 0x00CCCCCC, 0x00CDCDCD, 0x00CECECE, 0x00CFCFCF,
            0x00D0D0D0, 0x00D1D1D1, 0x00D2D2D2, 0x00D3D3D3, 0x00D4D4D4, 0x00D5D5D5, 0x00D6D6D6, 0x00D7D7D7,
            0x00D8D8D8, 0x00D9D9D9, 0x00DADADA, 0x00DBDBDB, 0x00DCDCDC, 0x00DDDDDD, 0x00DEDEDE, 0x00DFDFDF,
            0x00E0E0E0, 0x00E1E1E1, 0x00E2E2E2, 0x00E3E3E3, 0x00E4E4E4, 0x00E5E5E5, 0x00E6E6E6, 0x00E7E7E7,
            0x00E8E8E8, 0x00E9E9E9, 0x00EAEAEA, 0x00EBEBEB, 0x00ECECEC, 0x00EDEDED, 0x00EEEEEE, 0x00EFEFEF,
            0x00F0F0F0, 0x00F1F1F1, 0x00F2F2F2, 0x00F3F3F3, 0x00F4F4F4, 0x00F5F5F5, 0x00F6F6F6, 0x00F7F7F7,
            0x00F8F8F8, 0x00F9F9F9, 0x00FAFAFA, 0x00FBFBFB, 0x00FCFCFC, 0x00FDFDFD, 0x00FEFEFE, 0x00FFFFFF,
        };

        /// <summary>
        /// 红色
        /// </summary>
        public static Int32[] sRedPalette = {
            0x00002000, 0x00022002, 0x00042004, 0x00062006, 0x00082008, 0x000a200a, 0x000c200c, 0x000e200e,
            0x00102010, 0x00122012, 0x00142014, 0x00162016, 0x00182018, 0x001a201a, 0x001c201c, 0x001e201e,
            0x00202020, 0x00222022, 0x00242024, 0x00262026, 0x00282028, 0x002a202a, 0x002c202c, 0x002e202e,
            0x00302030, 0x00322032, 0x00342034, 0x00362036, 0x00382038, 0x003a203a, 0x003c203c, 0x003e203e,
            0x00402040, 0x00422042, 0x00442044, 0x00462046, 0x00482048, 0x004a204a, 0x004c204c, 0x004e204e,
            0x00502050, 0x00522052, 0x00542054, 0x00562056, 0x00582058, 0x005a205a, 0x005c205c, 0x005e205e,
            0x00602060, 0x00622062, 0x00642064, 0x00662066, 0x00682068, 0x006a206a, 0x006c206c, 0x006e206e,
            0x00702070, 0x00722072, 0x00742074, 0x00762076, 0x00782078, 0x007a207a, 0x007c207c, 0x007e207e,
            0x00802080, 0x0081207f, 0x0083217d, 0x0084217c, 0x0086227a, 0x00872279, 0x00892377, 0x008a2376,
            0x008c2474, 0x008d2473, 0x008f2571, 0x00902570, 0x0092266e, 0x0093266d, 0x0095276b, 0x0096276a,
            0x00982868, 0x00992867, 0x009b2965, 0x009c2964, 0x009e2a62, 0x009f2a61, 0x00a12b5f, 0x00a22b5e,
            0x00a42c5c, 0x00a52c5b, 0x00a72d59, 0x00a82d58, 0x00aa2e56, 0x00ab2e55, 0x00ad2f53, 0x00ae2f52,
            0x00b03050, 0x00b1304f, 0x00b3314d, 0x00b4314c, 0x00b6324a, 0x00b73249, 0x00b93347, 0x00ba3346,
            0x00bc3444, 0x00bd3443, 0x00bf3541, 0x00c03540, 0x00c2363e, 0x00c3363d, 0x00c5373b, 0x00c6373a,
            0x00c83838, 0x00c93837, 0x00cb3935, 0x00cc3934, 0x00ce3a32, 0x00cf3a31, 0x00d13b2f, 0x00d23b2e,
            0x00d43c2c, 0x00d53c2b, 0x00d73d29, 0x00d83d28, 0x00da3e26, 0x00db3e25, 0x00dd3f23, 0x00de3f22,
            0x00e04020, 0x00e04220, 0x00e1441f, 0x00e1461f, 0x00e2481e, 0x00e24a1e, 0x00e34c1d, 0x00e34e1d,
            0x00e4501c, 0x00e4521c, 0x00e5541b, 0x00e5561b, 0x00e6581a, 0x00e65a1a, 0x00e75c19, 0x00e75e19,
            0x00e86018, 0x00e86218, 0x00e96417, 0x00e96617, 0x00ea6816, 0x00ea6a16, 0x00eb6c15, 0x00eb6e15,
            0x00ec7014, 0x00ec7214, 0x00ed7413, 0x00ed7613, 0x00ee7812, 0x00ee7a12, 0x00ef7c11, 0x00ef7e11,
            0x00f08010, 0x00f08210, 0x00f1840f, 0x00f1860f, 0x00f2880e, 0x00f28a0e, 0x00f38c0d, 0x00f38e0d,
            0x00f4900c, 0x00f4920c, 0x00f5940b, 0x00f5960b, 0x00f6980a, 0x00f69a0a, 0x00f79c09, 0x00f79e09,
            0x00f8a008, 0x00f8a208, 0x00f9a407, 0x00f9a607, 0x00faa806, 0x00faaa06, 0x00fbac05, 0x00fbae05,
            0x00fcb004, 0x00fcb204, 0x00fdb403, 0x00fdb603, 0x00feb802, 0x00feba02, 0x00ffbc01, 0x00ffbe01,
            0x00ffc000, 0x00ffc104, 0x00ffc208, 0x00ffc30c, 0x00ffc410, 0x00ffc514, 0x00ffc618, 0x00ffc71c,
            0x00ffc820, 0x00ffc924, 0x00ffca28, 0x00ffcb2c, 0x00ffcc30, 0x00ffcd34, 0x00ffce38, 0x00ffcf3c,
            0x00ffd040, 0x00ffd144, 0x00ffd248, 0x00ffd34c, 0x00ffd450, 0x00ffd554, 0x00ffd658, 0x00ffd75c,
            0x00ffd860, 0x00ffd964, 0x00ffda68, 0x00ffdb6c, 0x00ffdc70, 0x00ffdd74, 0x00ffde78, 0x00ffdf7c,
            0x00ffe080, 0x00ffe184, 0x00ffe288, 0x00ffe38c, 0x00ffe490, 0x00ffe594, 0x00ffe698, 0x00ffe79c,
            0x00ffe8a0, 0x00ffe9a4, 0x00ffeaa8, 0x00ffebac, 0x00ffecb0, 0x00ffedb4, 0x00ffeeb8, 0x00ffefbc,
            0x00fff0c0, 0x00fff1c4, 0x00fff2c8, 0x00fff3cc, 0x00fff4d0, 0x00fff5d4, 0x00fff6d8, 0x00fff7dc,
            0x00fff8e0, 0x00fff9e4, 0x00fffae8, 0x00fffbec, 0x00fffcf0, 0x00fffdf4, 0x00fffef8, 0x00fffffc,
        };

        /// <summary>
        /// 蓝色
        /// </summary>
        public static Int32[] sBluePalette = {
            0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000020, 0x00000020, 0x00000020, 0x00000020,
            0x00000040, 0x00000040, 0x00000040, 0x00000040, 0x00000060, 0x00000060, 0x00000060, 0x00000060,
            0x00000080, 0x00000080, 0x00000080, 0x00000080, 0x000000A0, 0x000000A0, 0x000000A0, 0x000000A0,
            0x000000C0, 0x000000C0, 0x000000C0, 0x000000C0, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF,
            0x00002000, 0x00002000, 0x00002000, 0x00002000, 0x00002020, 0x00002020, 0x00002020, 0x00002020,
            0x00002040, 0x00002040, 0x00002040, 0x00002040, 0x00002060, 0x00002060, 0x00002060, 0x00002060,
            0x00002080, 0x00002080, 0x00002080, 0x00002080, 0x000020A0, 0x000020A0, 0x000020A0, 0x000020A0,
            0x000020C0, 0x000020C0, 0x000020C0, 0x000020C0, 0x000020FF, 0x000020FF, 0x000020FF, 0x000020FF,
            0x00004000, 0x00004000, 0x00004000, 0x00004000, 0x00004020, 0x00004020, 0x00004020, 0x00004020,
            0x00004040, 0x00004040, 0x00004040, 0x00004040, 0x00004060, 0x00004060, 0x00004060, 0x00004060,
            0x00004080, 0x00004080, 0x00004080, 0x00004080, 0x000040A0, 0x000040A0, 0x000040A0, 0x000040A0,
            0x000040C0, 0x000040C0, 0x000040C0, 0x000040C0, 0x000040FF, 0x000040FF, 0x000040FF, 0x000040FF,
            0x00006000, 0x00006000, 0x00006000, 0x00006000, 0x00006020, 0x00006020, 0x00006020, 0x00006020,
            0x00006040, 0x00006040, 0x00006040, 0x00006040, 0x00006060, 0x00006060, 0x00006060, 0x00006060,
            0x00006080, 0x00006080, 0x00006080, 0x00006080, 0x000060A0, 0x000060A0, 0x000060A0, 0x000060A0,
            0x000060C0, 0x000060C0, 0x000060C0, 0x000060C0, 0x000060FF, 0x000060FF, 0x000060FF, 0x000060FF,
            0x00008000, 0x00008000, 0x00008000, 0x00008000, 0x00008020, 0x00008020, 0x00008020, 0x00008020,
            0x00008040, 0x00008040, 0x00008040, 0x00008040, 0x00008060, 0x00008060, 0x00008060, 0x00008060,
            0x00008080, 0x00008080, 0x00008080, 0x00008080, 0x000080A0, 0x000080A0, 0x000080A0, 0x000080A0,
            0x000080C0, 0x000080C0, 0x000080C0, 0x000080C0, 0x000080FF, 0x000080FF, 0x000080FF, 0x000080FF,
            0x0000A000, 0x0000A000, 0x0000A000, 0x0000A000, 0x0000A020, 0x0000A020, 0x0000A020, 0x0000A020,
            0x0000A040, 0x0000A040, 0x0000A040, 0x0000A040, 0x0000A060, 0x0000A060, 0x0000A060, 0x0000A060,
            0x0000A080, 0x0000A080, 0x0000A080, 0x0000A080, 0x0000A0A0, 0x0000A0A0, 0x0000A0A0, 0x0000A0A0,
            0x0000A0C0, 0x0000A0C0, 0x0000A0C0, 0x0000A0C0, 0x0000A0FF, 0x0000A0FF, 0x0000A0FF, 0x0000A0FF,
            0x0000C000, 0x0000C000, 0x0000C000, 0x0000C000, 0x0000C020, 0x0000C020, 0x0000C020, 0x0000C020,
            0x0000C040, 0x0000C040, 0x0000C040, 0x0000C040, 0x0000C060, 0x0000C060, 0x0000C060, 0x0000C060,
            0x0000C080, 0x0000C080, 0x0000C080, 0x0000C080, 0x0000C0A0, 0x0000C0A0, 0x0000C0A0, 0x0000C0A0,
            0x0000C0C0, 0x0000C0C0, 0x0000C0C0, 0x0000C0C0, 0x0000C0FF, 0x0000C0FF, 0x0000C0FF, 0x0000C0FF,
            0x0000FF00, 0x0000FF00, 0x0000FF00, 0x0000FF00, 0x0000FF20, 0x0000FF20, 0x0000FF20, 0x0000FF20,
            0x0000FF40, 0x0000FF40, 0x0000FF40, 0x0000FF40, 0x0000FF60, 0x0000FF60, 0x0000FF60, 0x0000FF60,
            0x0000FF80, 0x0000FF80, 0x0000FF80, 0x0000FF80, 0x0000FFA0, 0x0000FFA0, 0x0000FFA0, 0x0000FFA0,
            0x0000FFC0, 0x0000FFC0, 0x0000FFC0, 0x0000FFC0, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        };

        /// <summary>
        /// 彩虹色
        /// </summary>
        public static Int32[] sRainbowPalette = {
            0x4D865, 0x4D865, 0x4D865, 0x1D865, 0x3D865, 0x2D865,
            0x2D865, 0x4D865, 0x4D865, 0x3D865, 0x2D865, 0x2D865,
            0x2D865, 0x1D865, 0x2D865, 0x2D865, 0x1D897, 0x2D897,
            0x3D897, 0x3D897, 0x2D897, 0x3D897, 0x2D897, 0x3D897,
            0x1D897, 0x3D897, 0x4D897, 0x2D897, 0x1D897, 0x1D897,
            0x4D897, 0x1D897, 0x2D897, 0x2D897, 0x2D897, 0x1D897,
            0x2D897, 0x1D897, 0x3D897, 0x3D897, 0x2D897, 0x1D897,
            0x2D897, 0x1D897, 0x3D897, 0x2D897, 0x2D897, 0x4D897,
            0x3D8DD, 0x3D8DD, 0x4D8DD, 0x3D8DD, 0x4D8DD, 0x3D8DD,
            0x2D8DD, 0x2D8DD, 0x1D8DD, 0x2D8DD, 0x2D8DD, 0x1D8DD,
            0x4D8DD, 0x4D8DD, 0x1D8DD, 0x2D8DD, 0x4D8B1, 0x4D8B1,
            0x3D8B1, 0x3D8B1, 0x4D8B1, 0x1D8B1, 0x1D8B1, 0x4D8B1,
            0x1D8B1, 0x2D8B1, 0x1D8B1, 0x4D8B1, 0x4D8B1, 0x2D8B1,
            0x1D8B1, 0x2D8B1, 0x2D8B1, 0x5D8B1, 0x8D8B1, 0xBD8B1,
            0xFD8B1, 0x12D8B1, 0x15D8B1, 0x18D8B1, 0x1BD8B1, 0x1FD8B1,
            0x22D8B1, 0x25D8B1, 0x28D8B1, 0x2BD8B1, 0x2FD8B1, 0x32D8B1,
            0x35D801, 0x38D801, 0x3BD801, 0x3FD801, 0x42D801, 0x45D801,
            0x48D801, 0x4BD801, 0x4FD801, 0x52D801, 0x55D801, 0x58D801,
            0x5BD801, 0x5FD801, 0x62D801, 0x65D801, 0x68D801, 0x6BD801,
            0x6FD801, 0x72D801, 0x75D801, 0x78D801, 0x7BD801, 0x7FD801,
            0x82D801, 0x85D801, 0x88D801, 0x8BD801, 0x8FD801, 0x92D801,
            0x95D801, 0x98D801, 0x9BD809, 0x9FD809, 0xA2D809, 0xA5D809,
            0xA8D809, 0xABD809, 0xAFD809, 0xB2D809, 0xB5D809, 0xB8D809,
            0xBBD809, 0xBFD809, 0xC2D809, 0xC5D809, 0xC8D809, 0xCBD809,
            0xCFD529, 0xD2D229, 0xD5CF29, 0xD8CC29, 0xDBC929, 0xDFC629,
            0xE2C329, 0xE5C029, 0xE8BD29, 0xEBBA29, 0xEFB729, 0xF2B429,
            0xF5B129, 0xF8AE29, 0xFBAB29, 0xFFA829, 0xFCA529, 0xFCA229,
            0xFF9F29, 0xFF9C29, 0xFD9929, 0xFC9629, 0xFF9329, 0xFF9029,
            0xFF8D29, 0xFE8A29, 0xFE8729, 0xFD8429, 0xFB8129, 0xFD7E29,
            0xFB7B29, 0xFD7829, 0xFF7559, 0xFE7259, 0xFD6F59, 0xFC6C59,
            0xFB6959, 0xFF6659, 0xFD6359, 0xFB6059, 0xFB5D59, 0xFD5A59,
            0xFE5759, 0xFB5459, 0xFC5159, 0xFD4E59, 0xFD4B59, 0xFE4859,
            0xFB4559, 0xFE4259, 0xFC3F59, 0xFC3C59, 0xFE3959, 0xFF3659,
            0xFC3359, 0xFD3059, 0xFD2D59, 0xFD2A59, 0xFB2759, 0xFD2459,
            0xFB2159, 0xFB1E59, 0xFE1B59, 0xFD1859, 0xFF1C79, 0xFB2079,
            0xFD2479, 0xFD2979, 0xFC2D79, 0xFB3179, 0xFC3579, 0xFD3A79,
            0xFE3E79, 0xFE4279, 0xFE4679, 0xFE4B79, 0xFF4F79, 0xFC5379,
            0xFC5779, 0xFB5C79, 0xFC607C, 0xFF647F, 0xFD6882, 0xFE6D85,
            0xFF7188, 0xFF758B, 0xFE798E, 0xFD7E91, 0xFC8294, 0xFE8697,
            0xFC8A9A, 0xFC8F9D, 0xFC93A0, 0xFB97A3, 0xFE9BA6, 0xFFA0A9,
            0xFCA4AB, 0xFDA8AD, 0xFDACAF, 0xFDB1B1, 0xFEB5B3, 0xFEB9B5,
            0xFDBDB7, 0xFDC2B9, 0xFDC6BB, 0xFBCABD, 0xFCCEBF, 0xFDD3C1,
            0xFDD7C3, 0xFDDBC5, 0xFCDFC7, 0xFEE4C9
        };

        /// <summary>
        /// 北极蓝
        /// </summary>
        public static Int32[] sArcticPalette = {
            0x92, 0x96, 0x99, 0x9D, 0xA0, 0xA4,
            0xA7, 0xAB, 0xAE, 0xB2, 0xB5, 0xB9,
            0xBC, 0xC0, 0xC3, 0xC7, 0xCA, 0xCE,
            0xD1, 0xD5, 0xD8, 0xDC, 0xDF, 0xE3,
            0xE6, 0xEA, 0xED, 0xF1, 0xF4, 0xF8,
            0xFB, 0xFF, 0x4000E, 0x4000D, 0x4000C, 0x4000B,
            0x4000A, 0x40009, 0x40008, 0x40007, 0x40006, 0x40005,
            0x40004, 0x40003, 0x40002, 0x40001, 0x40000, 0x400FF,
            0x4C02FE, 0x4C04FD, 0x4C06FC, 0x4C09FB, 0x4C0BFA, 0x4C0DF9,
            0x4C0FF8, 0x4C12F7, 0x4C14F6, 0x4C16F5, 0x4C18F4, 0x4C1BF3,
            0x4C1DF2, 0x4C1FF1, 0x4C21F0, 0x4C24EF, 0x4C97FE, 0x4C9AFD,
            0x4C9DFC, 0x4CA0FB, 0x4CA3FA, 0x4CA6F9, 0x4CA9F8, 0x4CACF7,
            0x4CAFF6, 0x4CB2F5, 0x4CB5F4, 0x4CB8F3, 0x4CBBF2, 0x4CBEF1,
            0x4CC1F0, 0x4CC4EF, 0x4CF1BD, 0x4CEEBA, 0x4CEBB7, 0x4CE8B4,
            0x4CE5B1, 0x4CE2AE, 0x4CDFAB, 0x4CDCA8, 0x4CD9A5, 0x4CD6A2,
            0x4CD39F, 0x4CD09C, 0x4CCD99, 0x4CCA96, 0x4CC793, 0x4CC490,
            0x64C18D, 0x64BE8A, 0x64BB87, 0x64B884, 0x64B581, 0x64B27E,
            0x64AF7B, 0x64AC78, 0x64A975, 0x64A672, 0x64A36F, 0x64A06C,
            0x649D69, 0x649A66, 0x649763, 0x649460, 0x64915E, 0x648E5C,
            0x648B5A, 0x648859, 0x648557, 0x648255, 0x647F53, 0x647C52,
            0x647950, 0x64764E, 0x64734C, 0x64704B, 0x646D49, 0x646A47,
            0x646745, 0x646444, 0x666442, 0x696440, 0x6C643E, 0x6F643D,
            0x71643B, 0x746439, 0x776437, 0x7A6436, 0x7C6434, 0x7F6432,
            0x826430, 0x85642F, 0x87642D, 0x8A642B, 0x8D6429, 0x906428,
            0x926426, 0x956424, 0x986422, 0x9B6421, 0x9D641F, 0xA0641D,
            0xA3641B, 0xA6641A, 0xA86418, 0xAB6416, 0xAE6414, 0xB16413,
            0xB36411, 0xB6640F, 0xB9640D, 0xBC640C, 0xBE640B, 0xC1640A,
            0xC46409, 0xC76409, 0xC96408, 0xCC6407, 0xCF6406, 0xD26406,
            0xD46405, 0xD76404, 0xDA6403, 0xDD6403, 0xDF6402, 0xE26401,
            0xE56400, 0xE86400, 0xE86300, 0xEA6500, 0xEB6600, 0xED6800,
            0xEE6900, 0xF06B00, 0xF16C00, 0xF36E00, 0xF46F00, 0xF67100,
            0xF77200, 0xF97400, 0xFA7500, 0xFC7700, 0xFD7800, 0xFF7A00,
            0xFD7D00, 0xFE8000, 0xFE8300, 0xFE8600, 0xFE8900, 0xFF8C00,
            0xFF8F00, 0xFF9200, 0xFE9500, 0xFF9800, 0xFE9B00, 0xFF9E00,
            0xFDA100, 0xFEA400, 0xFFA700, 0xFEAA00, 0xFDAD01, 0xFDB003,
            0xFDB304, 0xFFB606, 0xFFB907, 0xFDBC09, 0xFDBF0A, 0xFDC20C,
            0xFEC50D, 0xFFC80F, 0xFFCB10, 0xFDCE12, 0xFFD113, 0xFFD415,
            0xFFD716, 0xFEDA18, 0xFEDB35, 0xFDDC3A, 0xFDDD3F, 0xFFDE44,
            0xFFDF49, 0xFEE04E, 0xFDE153, 0xFFE258, 0xFEE35D, 0xFEE462,
            0xFDE567, 0xFDE66C, 0xFDE771, 0xFFE876, 0xFFE97B, 0xFEEA80,
            0xFEEB85, 0xFEEC8A, 0xFFED8F, 0xFDEE94, 0xFFEF99, 0xFDF09E,
            0xFEF1A3, 0xFDF2A8, 0xFDF3AD, 0xFDF4B2, 0xFDF5B7, 0xFFF6BC,
            0xFFF7C1, 0xFEF8C6, 0xFEF9CB, 0xFFFAD0
        };

        /// <summary>
        /// 红山红
        /// </summary>
        public static Int32[] sLavaPalette = {
            0x200, 0x30400, 0x40600, 0x60800, 0x70A00, 0x90C00,
            0xA0E00, 0xC1000, 0xD1200, 0xF1400, 0x101600, 0x121800,
            0x131A00, 0x151C00, 0x161E00, 0x182000, 0x1D2273, 0x1C2476,
            0x1B2679, 0x1B287C, 0x1A2A7F, 0x192C82, 0x182E85, 0x183088,
            0x17328B, 0x16348E, 0x153691, 0x153894, 0x143A97, 0x133C9A,
            0x123E9D, 0x1240A0, 0x1142A0, 0x1044A0, 0xF46A0, 0xE48A0,
            0xD4AA0, 0xC4CA0, 0xB4EA0, 0xA50A0, 0x952A0, 0x854A0,
            0x756A0, 0x658A0, 0x55AA0, 0x45CA0, 0x35EA0, 0x260A0,
            0x6D9F, 0x6E9E, 0x6F9D, 0x709D, 0x719C, 0x729B,
            0x739A, 0x749A, 0x7599, 0x7698, 0x7797, 0x7897,
            0x7996, 0x7A95, 0x7B94, 0x7C94, 0x7D93, 0x7E92,
            0x7F91, 0x8091, 0x8190, 0x828F, 0x838E, 0x848E,
            0x858D, 0x868C, 0x878B, 0x888B, 0x898A, 0x8A89,
            0x8B88, 0x8C88, 0x39887, 0x69586, 0x99185, 0xC8E85,
            0xF8A84, 0x128783, 0x158382, 0x188082, 0x1B7C81, 0x1E7980,
            0x21757F, 0x24727F, 0x276E7E, 0x2A6B7D, 0x2D677C, 0x30647C,
            0x34607B, 0x395D7A, 0x3E5979, 0x435679, 0x485278, 0x4D4F77,
            0x524B76, 0x574876, 0x5C4475, 0x614174, 0x663D73, 0x6B3A73,
            0x703672, 0x753371, 0x7A2F70, 0x7F2C70, 0x812B6D, 0x832A6B,
            0x852968, 0x872966, 0x892863, 0x8B2761, 0x8D265E, 0x8F265C,
            0x912559, 0x932457, 0x952354, 0x972352, 0x99224F, 0x9B214D,
            0x9D204A, 0x9F2048, 0xA11F46, 0xA31F45, 0xA51E43, 0xA71E42,
            0xA91D40, 0xAB1D3F, 0xAD1C3D, 0xAF1C3C, 0xB11B3A, 0xB31B39,
            0xB51A37, 0xB71A36, 0xB91934, 0xBB1933, 0xBD1831, 0xBF1830,
            0xC1182F, 0xC3192E, 0xC51A2D, 0xC71B2D, 0xC91B2C, 0xCB1C2B,
            0xCD1D2A, 0xCF1E2A, 0xD11E29, 0xD31F28, 0xD52027, 0xD72127,
            0xD92126, 0xDB2225, 0xDD2324, 0xDF2424, 0xE12523, 0xE32722,
            0xE52821, 0xE72A21, 0xE92B20, 0xEB2D1F, 0xED2E1E, 0xEF301E,
            0xF1311D, 0xF3331C, 0xF5341B, 0xF7361B, 0xF9371A, 0xFB3919,
            0xFD3A18, 0xFF3C18, 0xFF3E16, 0xFE4015, 0xFF4213, 0xFF4412,
            0xFE4610, 0xFF480F, 0xFF4A0D, 0xFF4C0C, 0xFF4E0A, 0xFE5009,
            0xFF5207, 0xFF5406, 0xFE5604, 0xFE5803, 0xFF5A01, 0xFF5C00,
            0xFE5F00, 0xFE6300, 0xFF6600, 0xFF6A00, 0xFF6D00, 0xFF7100,
            0xFF7400, 0xFF7800, 0xFF7B00, 0xFF7F00, 0xFF8200, 0xFF8600,
            0xFE8900, 0xFF8D00, 0xFF9000, 0xFE9400, 0xFE9700, 0xFE9A00,
            0xFE9D00, 0xFFA000, 0xFFA300, 0xFEA600, 0xFEA900, 0xFEAC00,
            0xFEAF00, 0xFFB200, 0xFFB500, 0xFEB800, 0xFFBB00, 0xFFBE00,
            0xFFC100, 0xFFC400, 0xFEC604, 0xFEC808, 0xFECA0C, 0xFFCC10,
            0xFFCE14, 0xFFD018, 0xFED21C, 0xFFD420, 0xFED624, 0xFFD828,
            0xFEDA2C, 0xFEDC30, 0xFEDE34, 0xFFE038, 0xFFE23C, 0xFEE440,
            0xFFE54D, 0xFEE758, 0xFFE863, 0xFEEA6E, 0xFFEB79, 0xFEED84,
            0xFFEE8F, 0xFEF09A, 0xFEF1A5, 0xFEF3B0, 0xFEF4BB, 0xFFF6C6,
            0xFFF7D1, 0xFEF9DC, 0xFEFAE7, 0xFFFCF2
        };
    }
}
